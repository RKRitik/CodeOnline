{"version":3,"sources":["Components/editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","state","css","js","html","editing","createView","bind","__html","this","className","style","borderBlockColor","borderStyle","Button","onClick","setState","rows","onChange","val","target","value","dangerouslySetInnerHTML","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAiHeA,E,kDA9Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,IAAK,mBACLC,GAAI,YACJC,KAAM,oBACNC,QAAS,QAGX,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBATD,E,8CAYnB,WAIE,MAAO,CACLC,OAJSC,KAAKR,MAAMG,MACZ,UAAYK,KAAKR,MAAMC,IAAM,aAC9B,WAAaO,KAAKR,MAAME,GAAK,iB,oBAMxC,WAAU,IAAD,OACP,OACE,qBAAKO,UAAU,uBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBACEC,MAAO,CAAEC,iBAAkB,QAASC,YAAa,UACjDH,UAAU,eAFZ,0BAKE,sBAAKA,UAAU,WAAf,UACG,IACD,cAACI,EAAA,EAAD,CACEC,QAAS,WACP,EAAKC,SAAS,CAAEX,QAAS,UAF7B,2BAQF,sBAAKK,UAAU,WAAf,UACG,IACD,cAACI,EAAA,EAAD,CACEC,QAAS,WACP,EAAKC,SAAS,CAAEX,QAAS,SAF7B,0BAQF,qBAAKK,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,CACEC,QAAS,WACP,EAAKC,SAAS,CAAEX,QAAS,QAF7B,2BASJ,sBACEM,MAAO,CAAEC,iBAAkB,QAASC,YAAa,UACjDH,UAAU,eAFZ,UAIE,8CACA,sBAAKA,UAAU,YAAf,UAC0B,SAAvBD,KAAKR,MAAMI,QACV,0BACEY,KAAK,KACLC,SAAU,SAACC,GACT,EAAKH,SAAS,CAAEZ,KAAMe,EAAIC,OAAOC,SAEnCA,MAAOZ,KAAKR,MAAMG,OAElB,KAEoB,QAAvBK,KAAKR,MAAMI,QACV,0BACEY,KAAK,KACLC,SAAU,SAACC,GACT,EAAKH,SAAS,CAAEd,IAAKiB,EAAIC,OAAOC,SAElCA,MAAOZ,KAAKR,MAAMC,MAElB,KAEoB,OAAvBO,KAAKR,MAAMI,QACV,0BACEY,KAAK,KACLC,SAAU,SAACC,GACT,EAAKH,SAAS,CAAEb,GAAIgB,EAAIC,OAAOC,SAEjCA,MAAOZ,KAAKR,MAAME,KAElB,WAGR,sBACEQ,MAAO,CAAEC,iBAAkB,QAASC,YAAa,UACjDH,UAAU,eAFZ,sBAKE,qBAAKY,wBAAyBb,KAAKH,2B,GAvG1BiB,IAAMC,WCSZC,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.013a7e8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nclass Editor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      css: \"h1{color:red ; }\",\r\n      js: \"function \",\r\n      html: \"<h1> header </h1>\",\r\n      editing: \"html\",\r\n    };\r\n\r\n    this.createView = this.createView.bind(this);\r\n    //this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  createView() {\r\n    let html = this.state.html;\r\n    let css = \"<style>\" + this.state.css + \"</style>\";\r\n    let js = \"<script>\" + this.state.js + \"</script>\";\r\n    return {\r\n      __html: html + css + js,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-flex h-100\">\r\n        <div className=\"row h-100 \">\r\n          <div\r\n            style={{ borderBlockColor: \"black\", borderStyle: \"dashed\" }}\r\n            className=\"col-sm-2 col\"\r\n          >\r\n            File Explorer\r\n            <div className=\"row mt-3\">\r\n              {\" \"}\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ editing: \"html\" });\r\n                }}\r\n              >\r\n                index.html\r\n              </Button>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              {\" \"}\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ editing: \"css\" });\r\n                }}\r\n              >\r\n                index.css\r\n              </Button>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ editing: \"js\" });\r\n                }}\r\n              >\r\n                index.js\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ borderBlockColor: \"black\", borderStyle: \"dashed\" }}\r\n            className=\"col-sm-5 col\"\r\n          >\r\n            <div>Code Editor</div>\r\n            <div className=\"row  mt-2\">\r\n              {this.state.editing === \"html\" ? (\r\n                <textarea\r\n                  rows=\"25\"\r\n                  onChange={(val) => {\r\n                    this.setState({ html: val.target.value });\r\n                  }}\r\n                  value={this.state.html}\r\n                ></textarea>\r\n              ) : null}\r\n\r\n              {this.state.editing === \"css\" ? (\r\n                <textarea\r\n                  rows=\"25\"\r\n                  onChange={(val) => {\r\n                    this.setState({ css: val.target.value });\r\n                  }}\r\n                  value={this.state.css}\r\n                ></textarea>\r\n              ) : null}\r\n\r\n              {this.state.editing === \"js\" ? (\r\n                <textarea\r\n                  rows=\"25\"\r\n                  onChange={(val) => {\r\n                    this.setState({ js: val.target.value });\r\n                  }}\r\n                  value={this.state.js}\r\n                ></textarea>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ borderBlockColor: \"black\", borderStyle: \"dashed\" }}\r\n            className=\"col-sm-5 col\"\r\n          >\r\n            Live View\r\n            <div dangerouslySetInnerHTML={this.createView()} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import \"./App.css\";\n\nimport Editor from \"./Components/editor\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}